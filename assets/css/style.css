:root {
    --name:Discord Dark;
    --background:#202225;
    --surface:#36393F;
    --onSurface:#FFFFFF;
    --separator:#72767D;
    --primary:#6D81CF;
    --onPrimary:#FFFFFF;
    --primaryVariant:#BDC8F1;
    --green:#81CE55;
    --red:#FF7E7E;
    --purple:#957DAD
}

:root {
    --xs-Pixel: 32;	    /* <576px */
    --sm-Pixel: 48;	/* ≥576px */
    --md-Pixel: 64;	/* ≥768px */
    --lg-Pixel: 96;	    /* ≥992px */
    --xl-Pixel: 112;	    /* ≥1200px */
    --xxl-Pixel: 128;	    /* ≥1400px */

    --c-Pixel: var(--md-Pixel);
}

body {
    overflow-x: hidden;
    background-color: var(--background);
}

/* ===== Scrollbar CSS ===== */
  /* Firefox */
  * {
    scrollbar-width: auto;
    scrollbar-color: var(--surface) #00000000;
}

/* Chrome, Edge, and Safari */
*::-webkit-scrollbar {
    width: 16px;
}

*::-webkit-scrollbar-track {
    background: #00000000;
}

*::-webkit-scrollbar-thumb {
    background-color: var(--surface);
    border-radius: 10px;
    border: 3px solid var(--separator);
}

#pixel-border {
    width: fit-content;
    height: fit-content;
    background-color: black;
    border: solid black calc( var(--c-Pixel) / 16 * 1px );
    padding: 0;
}

#pixel-container {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 0;
    height: calc( 5 * var(--c-Pixel) * 1px);
    width: calc( 5 * var(--c-Pixel) * 1px);
}

.pixel {
    font-family: 'Silkscreen', cursive;
    image-rendering: pixelated;
    height: calc( var(--c-Pixel) * 1px );
    width: calc( var(--c-Pixel) * 1px );
    border: none;
    margin: 0;
    padding: 0;
    text-align: center;
    font-size: calc( var(--c-Pixel) / 100 * 1.5rem );
    font-weight: 500;
    text-transform: uppercase;
    background-color: unset;
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;

    -webkit-touch-callout: none; /* iOS Safari */
      -webkit-user-select: none; /* Safari */
       -khtml-user-select: none; /* Konqueror HTML */
         -moz-user-select: none; /* Old versions of Firefox */
          -ms-user-select: none; /* Internet Explorer/Edge */
              user-select: none;
}
.pixel:target-text {
    white-space: nowrap;
    overflow: auto;
}
.pixel.up, .pixel.down, .pixel.left, .pixel.right {
    color: #0000 !important;
}
.pixel.up.active, .pixel.down.active, .pixel.left.active, .pixel.right.active {
    color: var(--onSurface) !important;
}

div, a, h2, button {
    color: var(--onSurface) !important;
}

.item-modal .info-title {
    padding: 8px;
    min-width: 100px;
    display: flex;
    align-items: center;
    font-size: 10px;
    font-weight: 700;
    letter-spacing: .3px;
    text-transform: uppercase;
    justify-content: center;
    background-color: var(--primary);
    color: var(--onPrimary);
    border: none;
    border-radius: 0.5em 0 0 0.5em;
}

.item-modal {
    margin: 60px 20px;
    height: calc(100vh - 120px);
    background-color: var(--surface);
}
@media only screen and (max-width: 992px) {
    .item-modal {
      height: fit-content;
    }
}
.item-modal .info-content {
    padding: 10px 14px;
    display: flex;
    flex-direction: column;
    overflow: auto;
    max-height: 130px;
}
.info-value {
    display: flex;
    flex-wrap: wrap;
    margin: auto;
    height: 100%;
}


/* █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ */
/*  Item Buttons █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ */
/* █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ █ */
.inventory-item, .equipped-item, .action-button, .close-log-button {
    padding: 8px;
    margin: 0.5em;
    align-items: center;
    font-size: 10px;
    border-radius: 0.25rem!important;
    border-width: 0;
    text-transform: uppercase;
    justify-content: center;
}
.action-button, .close-log-button {
    background-color: crimson;
}

.item-modal .item-wrapper {
    padding: 0 20px;
    height: 100%;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
}

.border-shadow {
    padding: 24px;
    border-radius: 6px;
    box-shadow: 2px 2px 4px 2px rgba(0,0,0,.14);
}

#infoLog span {
    width: 100%;
   
}

.log-text {
    padding: .5rem!important;
    margin: 0;
}
.log-text:not(:first-child) {
    border-top: solid 1px var(--separator);
}

.item-modal .info-box {
    padding: 0;
    min-height: 61px;
    display: flex;
    overflow: hidden;
}
.item-modal .info-box:first-child {
    margin-top: 4px;
}
.item-modal .info-box:not(:last-child) {
    margin-bottom: 16px;
}

.tip-info {
    border: var(--separator) 1px dotted;
    padding: 5px 20px 5px 5px;
    display: block;
    z-index: 100;
    background: var(--surface) no-repeat 100% 5%;
    color: var(--onSurface);
    left: 0px;
    margin-top: 1.5em!important;
    margin: 0.5em;
    width: 250px;
    position: absolute;
    top: 10px;
    text-decoration: none;
}

.update-container, .adventure-container {
    background-color: rgba(0,0,0,0.75);
    height: 100vh;
    width: 100vw;
    position: fixed;
    top: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

.update-log, .adventure-log {
    background-color: var(--surface);
    width: 60vw;
    max-height: 60vh;
    border-radius: 0.25rem;
    border: solid 3px var(--separator);
    display: flex;
    flex-direction: column;
    padding: 1em;
    overflow-y: auto;
}

pre {
    color: var(--onSurface);
}
span.markdown-red {
    color: var(--pink);
}
span.markdown-blue {
    color: var(--blue);
}
span.markdown-green {
    color: var(--teal);
}
span.markdown-italics {
    font-style: italic;
}




.button-section {
    margin: 0.5em;
    display: flex;
    justify-items: center;
    gap: 1em;
    font-size: 10px;
}

.button-section > button {
    width: 100%;
    margin: 0;
}



aside {
    position: absolute;
    z-index: 10;
    width: calc( var(--c-Pixel) * 2px );
    background-color: var(--primary);
    left: calc( 0px - ( var(--c-Pixel) * 2px ) );

    transition: left 500ms;
}
aside[active = true] {
    left: 0;
}

aside > #aside-toggle {
    position: absolute;
    top: 0;
    left: 100%;
    width: 2rem;
    height: 2rem;
    padding: 0.1rem;
}

aside > #aside-toggle > svg {
    fill: var(--onPrimary);
    transform: rotate(90deg);
    transition: transform 500ms;
}
aside[active = true] > #aside-toggle > svg {
    transform: rotate(-90deg);
}



main {
    transition: filter 500ms;
}
body:has(aside[active = true]) > main {
    filter: blur(4px);
    pointer-events: none;
    user-select: none;
}


.upload-box {
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
}

.file-upload,
.file-download > span {
    cursor: pointer;
    display: inline-flex;
    align-items: center;
    border-radius: 4px;
    font-size: 14px;
    font-weight: 600;
    color: #fff;
    font-size: 14px;
    padding: 10px 12px;
    background-color: var(--primaryVariant);
    width: 100%;
    justify-content: center;
}

.file-upload svg,
.file-download > span svg {
    height: 16px;
    margin-right: 4px;
    fill: var(--onPrimary);
}

.file-input, .file-download {
    width: 100%;
}